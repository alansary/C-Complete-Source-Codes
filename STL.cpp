#include <iostream>
using std::cout;
using std::cin;
	//.get() returns one character from the user input
using std::endl;
using std::fixed; // ensures that decimal point is displayed
// fixed is a sticky stream manipulator
using std::boolalpha; // causes bool values to print as "true" or "false"
// boolalpha is a sticky stream manipulator

#include <iomanip>
using std::setprecision; // sets numeric output precision
// setprecision is a sticky stream manipulator
using std::setw; // enables program to set a field width
// right-justified in a field of width x
// setw is a non-sticky stream manipulator

#include <string>
using std::string;
	//.length() .substr(start_index, end_index)
using std::getline
	//getline(input_stream, destination)

#include <cmath> // standard C++ math library
using std::pow; // enables program to use function pow
// allows you to raise a value to a power


#include <cstdlib> // contains prototypes for functions srand and rand
using std::rand; // is used to generate random numbers
using std::srand; // is used to seed the random number generator
// srand argument is an unsigned int value

#include <ctime> // contains prototypes for function time
using std::time;
// time gives us the time of the day
	// the argument 0 passed to the time function basically says that
	// we don't intend to store the time in a variable in memory, this
	// is actually a pointer argument, we can provide a pointer and the
	// the value of the time will be placed in that variable, in this case
	// we just want to use its return value
// we want to make sure that the psudo-random numbers generated by
// rand change sequence every time we execute the program
// , the best way to do that is by passing to srand a value that
// constantly changes every time you run the program


#include <cctype> // prototype for islower and toupper
using std::islower; // islower determines if a given
// character is a lowercase letter
using std::toupper; // to upper converts a given character
// to it uppercase version

/*****************************************************************
 * Remarks:														 *
 * ========														 *
 * 1- setprecision(x) sets the precision to x maximum, so 		 *
 * it can be 0, 1, 2, ..., x. fixed forces the decimal 			 *
 * point to be displayed. When you combine both of them 		 *
 * in an output statement, it says that all floating point 		 *
 * numbers will be displayed with precisely x digits after		 *
 * the decimal point.											 *
 * 2- A non-sticky parameterized stream manipulator basically	 *
 * says that it is applied only to the very next value 			 *
 * that gets output 											 *
 * setw is a non-sticky stream manipulator 						 *
 * setprecision and fixed are sticky stream manipulators 		 *
 * because from the moment that you set them by outputting 		 *
 * them to a cout object, they apply to all subsequent 			 *
 * floating point values 										 *
 * 3- EOF exists in c++11 not c++99 							 *
 * Ctrl+D is the EOF sequence in Linux 							 *
 *****************************************************************/
